'Use assetURL to fetch forms'Smalltalk has: assetURL  []Smalltalk declare: assetURL as: 'https://smalltalkzoo.thechm.org/users/codefrau/St78/assets/'."2025-02-12: Edited retroactively to point to new server"UserView understands: 'bugScreenMenu | choice w turtle i fileNames f index  	[choice _ (Menu new string:''exit to overviewrestore displayopen a subviewopen a browseropen a workspaceopen form ...tablet demoturtle demoedit file ...publish update ...load updatessave'') bug.	choice = 1 		[projectWindow  nil  []		projectWindow runParent]	choice = 2  [self restore]	choice = 3  [self schedule: ProjectWindow init]	choice = 4  [self schedule: BrowseWindow default]	choice = 5  [self schedule: (CodeWindow new class: UserView selector: workspace para: (UserView code: workspace) formerly: false)]	choice = 6  [f _ self loadForm 		[self schedule: (FormWindow new form: f)]]	choice = 7  [self schedule: (D1TopWindow new default)]	choice = 8 		[turtle _ Turtle init.		turtle color: black; width: 4; inking: oring.		for i to: 50 do [turtle go: i * 4; turn: 89]]	choice = 9 		[fileNames _ user fileString: nil.		index _ (Menu new stringFromVector: fileNames , '' cancel edit '') zbug.		index  fileNames length  [user editFile: fileNames  index]]	choice = 10 		[fileNames _ (user fileString: nil) all f suchThat (f copy: f length - 2 to: f length) = ''.st''.		index _ (Menu new stringFromVector: fileNames , '' cancel publishing '') zbug.		index  fileNames length  [user update: fileNames  index _ (user fileString: fileNames  index)]]	choice = 11  [user loadUpdates]	choice = 12 		[NoteTaker  [user save]		user quit]]' classified: 'As yet unclassified'UserView understands: 'loadForm | fileNames f index	[fileNames _ (user fileString: assetURL) all f suchThat (f copy: (f length - 4 max: 1) to: f length) = ''.form''.	index _ (Menu new stringFromVector: fileNames , '' cancel form load '') zbug.	index > fileNames length  [false].	Form new fromInstance: (user fileString: assetURL + (fileNames  index)) asStream]' classified: 'As yet unclassified'