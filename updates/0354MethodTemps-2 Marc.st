ClassPane understands: 'selected 	[organizationPane class: Smalltalk  (list  selection).	organizationPane select: 1.	true[]  "not until clipped restore works right"	user topWindow titleframeWindow clear.	user topWindow title_ ''Classes > '' + (list  selection); showtitle]' classified: 'as yet unclassified'Generator understands: 'setRoot rootContext 	[root _ rootContext]' classified: 'as yet unclassified'Menu understands: 'string: str | pt para 	[[str last  13  [str _ str + '''']].	para _ str asParagraph.	pt _ [text  nil  [00] text frame origin].	text _ Textframe new para: para frame: (Rectangle new origin: pt corner: 1000  1000).	pt _ text maxx: str length + 1.	text frame growto: pt + (40).	text measureall.	[str is: String[para center]].  "unless given a paragraph"	frame _ text frame inset: 22.	thisline  nil 		[thisline _ Rectangle new origin: text frame origin corner: text frame corner xtext lineheight]]' classified: 'private'SystemDictionary understands: 'help  "Smalltalk help."	[user schedule: (CodeWindow new title: ''Useful expressions'' para: (SystemDictionary code: help)).	"	Smalltalk browseChanges. 	Changes init.	user browseFiles.	user sched inspect -> vector of windows	user findBuriedWindows.	user schedule: ProjectSorter init.	Undeclared inspectWithTitle: ''Undeclared''.	Undeclared forgetUnreferencedEntries.  	Smalltalk inspectWithTitle: ''Smalltalk''.	Smalltalk allGlobals inspectWithTitle: ''Globals''.	Window browseAllSourceWIthString: ''exitflag''.	Smalltalk browseAllSourceWIthString: '' t1 ''.	Smalltalk browseSendersOf: unique.	Smalltalk browseImplementersOf: title:rocessFrame:.	user filoutWindowsOn: ''wintest.st''. 	Smalltalk _ SystemDictionary new copyfrom: Smalltalk.		Things to clean up. . .	Dorado, Notetaker, hardcopy, MethodKeeper, goBaby		beAlto, NTCursor, 	CompiledMethod holdLiterals has bitBlt to nil ?? but works	CompiledMethod numArgs:. crashes at BitBlt new bltObj:		when edited in browser, but can compileAll	MethodDict insert:method: etc		same but can compileAll	Decompiler/compile barfs onTextImage classInit		and UserView bugScreenMenu		and Window styleEdit		These all have many literals	Decompile/install gives scrollbar fibrillation		This is because the decompile of ListPaneeachtime		differs from its intended code  Try it: browse with 		shift key down (decompile) or not	Get clipping working right for update of window titles		see Classpane>selected and UserView>restore:without:	"	]'TextImage understands: 'selecting | mp charix charRect rect mouseChar mouseRect growingForward  	[mp _ user mp.	charix _ self charofpoint: mp andrect [charRect].	self complement: off.	self fintype.	[charix = c1 and c1 = c2 		[while (user redbug and charix = (self charofpt: user mp)) do			[].		user redbug  false 			[self selectword.			self select.			true]]].	sel _ on.	c2 _ charix.	c1 _ c2.	rect _ charRect + (1  0).	self complementfrom: charRect to: rect.	while [mp _ user mpnext.	mp] do		[user idle.		mouseChar _ self charofpoint: mp andrect [mouseRect].		[c1 = c2  [growingForward _ mouseChar  c2]].		[growingForward 			[[mouseChar < c1 				[mouseChar _ c1.				self pointofchar: mouseChar andrect [mouseRect]]].			self complementfrom: mouseRect to: rect.			c2 _ mouseChar.			rect _ mouseRect]		[mouseChar > c2 			[mouseChar _ c2.			self pointofchar: mouseChar andrect [mouseRect]]].		self complementfrom: charRect to: mouseRect.		c1 _ mouseChar.		charRect _ mouseRect].		charRect = rect 			[rect _ charRect + (1  0).			self complementfrom: charRect to: rect]].	growingForward  []	self complementfrom: rect - (1  0) to: rect]' classified: 'as yet unclassified'UniqueString understands: ' index _ char 	[user notify: ''UniqueStrings are not for writing into'']' classified: 'as yet unclassified'UniqueString understands: '= other 	[self  other]' classified: 'comparing'UniqueString understands: 'hasInterned: sym | i bucket  	[[sym length = 1 		[sym  1 < 128  [UST1  (sym  1 + 1)]]].	bucket _ USTable  (sym stringhash \ USTable length + 1).	for i to: bucket length do		[bucket  i  nil  []		sym length = (bucket  i) length 			[sym = (bucket  i)  [bucket  i]]].	false]' classified: 'as yet unclassified'UniqueString understands: 'intern: str | sym bucket 	[sym _ self hasInterned: str.	sym  [sym]	sym _ [str is: UniqueString  [str]			(UniqueString new: str length) str: str].	bucket _ str stringhash \ USTable length + 1.	USTable  bucket _ USTable  bucket , sym.	sym]' classified: 'as yet unclassified'UniqueString understands: 'rehash | oldTable sym i  " a rehash"	[oldTable _ USTable.	USTable _ Vector new: oldTable length.	for i to: oldTable length do		[USTable  i _ Vector new: 0.		for sym from: oldTable  i do			[sym  nil  []			self intern: sym].		oldTable  i _ nil]]' classified: 'private'UserView understands: 'buttons	[self primMouseKeys land: 7]' classified: 'mouse, cursor and kbd'UserView understands: 'currentDisplay: form 	[DisplayForm _ form.	screenrect _ 0  0 rect: form extent.	myoffset _ 0.	mxoffset _ myoffset.	htab _ mxoffset.	vtab _ htab.	self mapDisplay]' classified: 'displaying'UserView understands: 'cursorBLTer: blt xoff: xoff yoff: yoff 	[user croak] primitive: 53' classified: 'mouse, cursor and kbd'UserView understands: 'displayHeight: ht 	[ht _ ht | 16.	"Make sure old disp will get released"	DisplayForm refct > 3  [user croak]	"Make a small one first so don''t have two bigs"	user currentDisplay: (Form new extent: 640  16 bits: (String new: 16 * 80) offset: nil).	user currentDisplay: (Form new extent: 640  ht bits: (String new: ht * 80) offset: nil).	ht]' classified: 'displaying'UserView understands: 'fileString: fileName  "Returns file contents" 	[nil] primitive: 66' classified: 'file stuff'UserView understands: 'fileString: fileName _ string  "stores string to file" 	[nil] primitive: 66' classified: 'file stuff'UserView understands: 'findBuriedWindows | windows windowNames i selection menu	"user findBuriedWindows."	[windows _ user sched.	windowNames _ Stream default.	for i to: windows length do		[windowNames append: (windowsi) asString; cr].	menu _ Menu new string: windowNames contents asParagraph flushleft.	selection _ menu bugButtonUp.	selection > 0 		[user promote: windowsselection.		user restore]]'UserView understands: 'kbck | keyWaiting 	[keyWaiting _ self rawkbck.	keyWaiting  [kbMap  keyWaiting]	false]' classified: 'mouse, cursor and kbd'UserView understands: 'notifier: msg level: level interrupt: interrupt 	[self restoredisplay.	NotifyFlag  false 		[disp cr.		disp append: ''NotifyFlag is false...''.		disp cr.		disp append: '' top-blank shows stack, user restart' + 30 inString + ' aborts,''.		disp cr.		disp append: '' tempframe' + 30 inString + ' shows args, ctrl-d proceeds''.		disp cr.		disp append: msg.		disp cr.		disp show.		(Top  level) debug.		false]	NotifyWindow new of: msg level: level interrupt: interrupt]' classified: 'handy system access'UserView understands: 'notifier: msg stack: stack interrupt: interrupt 	[self restoredisplay.	NotifyFlag  false 		[disp cr.		disp append: ''NotifyFlag is false...''.		disp cr.		disp append: '' sender debug' + 30 inString + ' shows stack, user restart' + 30 inString + ' aborts,''.		disp cr.		disp append: '' tempframe' + 30 inString + ' shows args, ctrl-d proceeds''.		disp cr.		disp append: msg.		disp cr.		disp show.		stack debug.		false]	NotifyWindow new of: msg stack: stack interrupt: interrupt]' classified: 'handy system access'UserView understands: 'NTshrink | i j was   "WaitCursor showwhile [user NTshrink]. "	[was _ UniqueString howMany.	user cr; show: ''Reclaiming UniqueStrings may take a while. . . ''.	WaitCursor showwhile 		[for i to: USTable length do			[for j to: (USTable  i) length do				[(USTable  i  j) refct = 2  [USTable  i  j _ nil]				]].		a rehash].	user show: (was - UniqueString howMany) asString + '' reclaimed.'']' classified: 'handy system access'UserView understands: 'primCursorLoc_ pt   "Drive the cursor to pt" 	[self croak] primitive: 59' classified: 'mouse, cursor and kbd'UserView understands: 'restartup: aWindow 	[NormalCursor topage1.	self schedule: aWindow.	thisContext restart]' classified: 'scheduling'UserView understands: 'screenextent: pt tab: tabPt 	[htab _ tabPt x | 16.	screenrect _ 0  0 rect: pt x | 32  (pt y | 2).	self currentCursor: currentCursor.	self reconfigure.	"self restore"]' classified: 'displaying'UserView understands: 'unschedule: aWindow | index 	[index _ sched find: aWindow.	0 < index  [sched _ sched  (1 to: index - 1) concat: sched  (index + 1 to: sched length)]]' classified: 'scheduling'UserView understands: 'updatesAvailable | fileStrm lineStrm 	[fileStrm _ (self update: ''updates.list'') asStream.	(fileStrm upto: 13)  ''Notetaker updates''  [user notify: ''Cannot reach update server'']	lineStrm _ (Vector new: 10) asStream.	until fileStrm end do		[lineStrm next_ fileStrm upto: 13].	lineStrm contents]' classified: 'file stuff'VariableLengthClass understands: 'new: nElements 	"Old limits from Alto if primitive failed"	[nElements > 16384  [user notify: nElements asString + '' is too big a String'']	nElements > 8192  [user notify: nElements asString + '' is too big a Vector'']	nElements < 0  [user notify: nElements asString + '' -- negative length is invalid'']	self new: nElements asInteger] primitive: 28' classified: 'instance creation'VariablePane understands: 'to: pane 	[valuePane _ pane]' classified: 'converting'Vector understands: 'base: base | strm i	"Produce a list of my integer items printed in the given base"  	[strm _ Stream default.	for i to: self length do		[strm append: (self  i base: base).		strm space].	strm contents]' classified: 'as yet unclassified'Vector understands: 'hex | strm i  	"Produce a list of my integer items printed in hex"  	[strm _ (String new: 4 * self length) asStream.	for i from: self do		[strm append: i hex].	strm contents]' classified: 'printing'Window understands: 'fixframe: rect 	"Subclasses may override to constrain the frame"	[rect]' classified: 'as yet unclassified'Window understands: 'showtitle 	[self style: noTitle  []	"[titleframe  nil [] titleframe clear]."	[titlepara  nil  [titlepara _ Paragraph new text: self title runs: titlerun alignment: 0]].	titleframe put: titlepara at: frame origin + titleloc.	titleframe comp.	titleframe outline]' classified: 'as yet unclassified'Window understands: 'titleframeWindow   "includes border, for updating"	[ titleframe window inset: 0-2]'CodePane derstands: 'help' unique.UserView derstands: 'compileAllFrom:to:' unique.UserView derstands: 'cursorLink:' unique.UserView derstands: 'kbd:' unique.UserView derstands: 'timewords' unique.