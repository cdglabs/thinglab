'Methods with original comments and temp names.Only those that do not affect actual byteCode will be installed.'.Changes init.MergingSources _ true. "must be turned off at end"Class understands: 'abstract	[self fields: nullString]' classified: falseClass understands: 'canunderstand: selector	[messagedict has: selector]' classified: falseClass understands: 'canUnderstand: selector	[messagedict has: selector [self]	superclassnil [false]	superclass canUnderstand: selector]' classified: falseClass understands: 'category [SystemOrganization invert: self title unique]' classified: falseClass understands: 'category: cat	[cat is: String [SystemOrganization add: self title unique under: cat]		user notify: ''Category name must be a String'']' classified: falseClass understands: 'classInit		"gets propagated to a dummy instance"	[self new classInit]' classified: falseClass understands: 'classvars [classvars]' classified: falseClass understands: 'clean | name	"release unreferenced classvars"	[for name from: classvars do		[nameClassOrganization and (classvars ref: name) refct=1			[classvars delete: name]]]' classified: falseClass understands: 'copy: sel from: class	[self copy: sel from: class classified: nil]' classified: falseClass understands: 'copy: sel from: class classified: cat "Useful when modifying an existing class"		| s code	[sel is: Vector [for s from: sel do [self copy: s from: class classified: cat]]	sel is: String [self copy: (class organization category: sel) from: class classified: cat]	code _ class code: sel.  codenil []	[catnil [cat _ class organization invert: sel]].	[messagedict has: sel		[code text=(self code: sel) text []		user notify: title+'' ''+sel+'' will be redefined if you proceed.'']].	self understands: code classified: cat]' classified: falseClass understands: 'decompile: t1 	[user displayoffwhile [Decompiler new decompile: t1 class: self]]' classified: falseClass understands: 'default	[self new default]' classified: falseClass understands: 'definition | strm		"return a string that defines me (Class new title etc.)"	[strm _ (String new: 50) asStream.	self printdefon: strm.	strm contents]' classified: falseClass understands: 'describe: method on: strm | sel cls  "append mclass and selector"	[cls _ self.	until [clsnil [cls_self. sel_?] sel _ cls md invert: method] do		[cls _ cls superclass].	strm append: cls title; space; append: sel]' classified: falseClass understands: 'ed: selector | c s	[c_ self code: selector. user clearshow: c.	while (s_ user request: ''substitute: '') do		[c _ c subst: s for: (user request: ''for: '').		user clearshow: c]	self understands: c]' classified: falseClass understands: 'edit: selector | para s v	[para _		[selector=ClassOrganization			[self organization asParagraph]		messagedict has: selector[self code: selector]		nullString asParagraph].	self edit: selector para: para formerly: false]' classified: falseClass understands: 'environment	[environment]' classified: falseClass understands: 'environment _ environment [] "for resetting to reread sharing clauses"' classified: falseClass understands: 'execute: code		"disposable methods"	[self understands: ''doit ['' + code + '']''.	self new doit]' classified: falseClass understands: 'fieldNamesInto: collector	[[superclassnil [] superclass fieldNamesInto: collector].	(Reader new of: myinstvars) readInto: collector]' classified: falseClass understands: 'init		"init and default get propagated to instances"	[self new init]' classified: falseClass understands: 'init: n		"init and default get propagated to instances"	[self new init: n]' classified: falseClass understands: 'instfield:	 i	"prevent user from getting freelist"	[i > Class instsize [user notify: ''arg too big'']	super instfield: i]' classified: falseClass understands: 'instvars	[self fieldNamesInto: FieldNameCollector default]' classified: falseClass understands: 'invertRef: refs "Refs may be a vector (to allow batching)" 		| cl env source ref inv sym t	[refs isnt: Vector [(self invert: refs inVector)1]	env _ (self wholeEnvironment concat: (Undeclared, Smalltalk)) asStream.	source _ Dictionary init.	refs transform ref to		[cl _ self. env reset.			until				[(sym _ env next)false [inv _ ''unknown '' concat: ref asOop base8]				[clnil and symcl classvars [t _ cl title. cl _ cl superclass] t _ false].				(inv _ sym invertRef: ref)false [false]				[t []				 t _ source lookup: sym []				 source insert: sym with: (t _ Smalltalk invert: sym)].				inv _ (t concat: '' '') concat: inv]			 do [].		inv]	]' classified: falseClass understands: 'Isa: x  "is x on my superclass chain?"	[superclass  x [true];  nil [false]	superclass Isa: x]' classified: falseClass understands: 'md [messagedict]' classified: falseClass understands: 'method: sel	[messagedict methodorfalse: sel]' classified: falseClass understands: 'moveFromCat: cat1 to: cat2	[(cat1 is: String) and (cat2 is: String) 			[SystemOrganization move: self title unique from: cat1 to: cat2]		user notify: ''Category name must be a String'']' classified: falseClass understands: 'new: length "To allow fixed-length classes to simulate variable-length ones"	[self new init: length] "By convention"' classified: falseClass understands: 'notify: errorString at: position in: stream	[self notify: errorString at: position in: stream for: self]' classified: falseClass understands: 'organization | o	[	[classvars  nil[self declare: ClassOrganization]].	o _ classvars lookup: ClassOrganization.	o is: ClassOrganizer[o]	o _ ClassOrganizer new init: messagedict contents sort.	classvars insert: ClassOrganization with: o.  o]' classified: falseClass understands: 'print: inst on: strm | ivars i	[ivars _ self instvars.	strm append: ''(''; append: title; append: '' new ''.	for i to: instsize do		[strm append: ivarsi; append: '': '';			print: (inst instfield: i); space]	strm append: '')'']' classified: falseClass understands: 'printon: strm	[strm append: ''Class '' + title]' classified: falseClass understands: 'realself [Smalltalktitle unique]		"as opposed to possible filin ghost"' classified: falseClass understands: 'recopy: inst | t i	[t _ self new.	for i to: self instsize do		[t instfield: i _ (inst instfield: i) recopy]	t]' classified: falseClass understands: 'rename: newtitle		| name newname oldclass category	[name _ title unique.  newname _ newtitle unique.		[Smalltalk has: newname			[oldclass _ Smalltalknewname.			user notify: ''All '' + newtitle + ''s will become obsolete if you proceed''.			oldclass obsolete]		category _ SystemOrganization invert: name.		AllClassNames _ AllClassNames insertSorted: newname.		SystemOrganization classify: newname under: category].	Smalltalk delete: name.	AllClassNames _ AllClassNames delete: name.	SystemOrganization delete: name.	title _ newtitle.	Smalltalk declare: newname as: self]' classified: falseClass understands: 'selectors		"Return a Vector of all my selectors."	[self messages]' classified: falseClass understands: 'sharing: table	[selfself realself[self realself sharing: table]	environment _ environment asVector , table]' classified: falseClass understands: 'shrink [messagedict _ messagedict shrink]' classified: falseClass understands: 'space | a s	[s _ 0. for a from: messagedict do		[s _ s + (messagedict method: a) length]	s]' classified: falseClass understands: 'subclassof: superclass	[(superclass isnt: Class) and (superclass isnt: VariableLengthClass)		[user notify: ''Superclass is not yet defined or not a Class'']]' classified: falseClass understands: 'superclass [superclass]' classified: falseClass understands: 'title [title]' classified: falseClass understands: 'title: title	[self title: (title _ title unique) insystem: Smalltalk]' classified: falseClass understands: 'understands: code | selector old		"install method"	[self understands: code classified: ''As yet unclassified'']' classified: falseClass understands: 'understands: code classified: heading		"compile and install method"	[Generator new compile: code asParagraph		in: self under: heading notifying: self]' classified: falseClass understands: 'veryspecial: n		"inaccessible fields"	[instsize _ self instvars length + n]' classified: falseClass understands: 'wholeEnvironment	[(classvars asVector concat: environment asVector) concat:		[superclassnil [()] superclass wholeEnvironment]]' classified: falseClass understands: 'whosends: selector | s l a	[s _ Stream default.	for a from: messagedict do		[for l from: (messagedict literals: a) do			[selectorl[s append: a; space]]]	s contents]' classified: falseObject understands: ' x [self>xfalse]' classified: falseObject understands: ' x [self=xfalse]' classified: falseObject understands: ' x [self<xfalse]' classified: falseObject understands: ', x | v	[v _ Vector new: 2.	v1 _ self. v2 _ x.  v]' classified: falseObject understands: '= x [selfx]' classified: falseObject understands: 'and x [self[x eval] false]' classified: falseObject understands: 'and: x [self[x] false]' classified: falseObject understands: 'asParagraph [self asString asParagraph]' classified: falseObject understands: 'asStream [self asVector asStream]' classified: falseObject understands: 'asVector | v	[selfnil[Vector new: 0]	v _ Vector new: 1. v1 _ self. v]' classified: falseObject understands: 'canunderstand: selector	[self class canunderstand: selector]' classified: falseObject understands: 'copy		"create new copy of self"	[self is: Object[self]	self class copy: self]' classified: falseObject understands: 'empty [self length = 0]' classified: falseObject understands: 'eqv: x [x[self] selffalse]' classified: falseObject understands: 'error: s [user notify: s]' classified: falseObject understands: 'fields	["Return an Array of all my field names or many of my subscripts."	self class is: VariableLengthClass		[self length  50 [1 to: self length]		 (1 to: 20) concat: (self length-20 to: self length)]	self class instvars]' classified: falseObject understands: 'inspectfield: n	"used by variable panes"	[self class is: VariableLengthClass [self(self fieldsn)]	self instfield: n]' classified: falseObject understands: 'instfields | vec size  i	["Return an Array of all my field values or many of my elements."	self class is: VariableLengthClass [selfself fields]	size _ self class instsize.	vec _ Vector new: size.	for i to: size do [veci _ self instfield: i].	vec]' classified: falseObject understands: 'inVector | vec	["Return me as the sole element of a new Vector."	vec _ Vector new: 1.	vec1 _ self.	vec]' classified: falseObject understands: 'is: x [self classx]' classified: falseObject understands: 'Is: x  "Is the class x a superclass or class of self"	[self class  x [true]	self class Isa: x]' classified: falseObject understands: 'isArray	[false]' classified: falseObject understands: 'isnt: x [(self classx)  false]' classified: falseObject understands: 'Isnt: x	[(self Is: x)false]' classified: falseObject understands: 'isNumber	[false]' classified: falseObject understands: 'itself' classified: falseObject understands: 'or x [self[true] x eval]' classified: falseObject understands: 'or: x [self[true] x]' classified: falseObject understands: 'recopy	"recursively copy whole structure"	[self is: Object[self]	self class recopy: self]' classified: falseObject understands: 'ref: index	[FieldReference new object: self offset: index]' classified: falseObject understands: 'subError [self error: ''message not defined by subclass'']' classified: falseObject understands: 'xor: x [x[selffalse] self]' classified: falseMergingSources _ false.