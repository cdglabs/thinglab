'Extend a prompt line with shift-return'CodePane understands: 'doit | listen sel result printer 	[scrollBar hidewhile 		[listen _ pared hasPrompt.		sel _ pared selectRange.		pared unselect; fintype.		[sel empty  [pared selectLine. sel _ pared selectRange]].		result _ selectorPane execute: pared selectionAsStream for: self.		sel  pared selectRange  ["syntax error"]		sel _ sel stop + 1.		pared selectRange: (sel to: sel).		printer _ (String new: 100) asStream.		[listen  [pared selectToNextPrompt.				printer crtab: 1; print: result; cr; next_ 20; space]			result  nil  [self]			printer space; print: result].		pared paste: printer contents.		listen or deselectAfterDoit 			[pared select: pared selectRange stop + 1]]]' classified: 'initialization'CodePane understands: 'kbd | key	[key _ user kbck.	key = 130 or (pared hasPrompt and key = 13) 		[user kbd.  		user shiftKey  [pared extendPrompt]		self doit]	key = 138 		[user kbd. self compile]	key = 165 		[user kbd. self cancel]	pared typing]' classified: 'as yet unclassified'TextImage understands: 'extendPrompt	["user typed shift-return, so go to next line and do not eval yet"	self replace: ''    ''. "insert 4 spaces as required by hasPromptAt:"	c1 _ c2.	self selectAndScroll]' classified: 'listener'TextImage understands: 'findPromptBefore: i | j	[ "is there a prompt at the start of the line of character i?"	until (i  1 or para(i-1)=13) do		[i _ i - 1].	i > para length  [0].	parai = 20  [i].	"If not, is this an extended prompt (4 spaces) from a previous line?"	i + 3 > para length  [0].	for j from: i to: i + 3 do		[parai  space  [0]].	self findPromptBefore: i - 1]' classified: 'listener'TextImage understands: 'hasPrompt	[ "If there is a prompt at the start of the current line we''re a listener.	Also if this is an extended prompt from a previous line"	c1  c2 or para length = 0  [false]	 (self findPromptBefore: (c1 min: para length)) > 0]' classified: 'listener'TextImage understands: 'selectLine 	[ "Select back to CR or prompt, and forward to the end of the line or text"	c1 _ self findPromptBefore: c2.	[c1 > 0  [c1 _ c1 + 1]	c1 _ c2.	until (c1 = 1 or (para(c1-1)=13)) do		[c1 _ c1 - 1].	c2 _ para length+1 min: c1].	until (c2 = (para length+1) or parac2=13) do		[c2 _ c2 + 1]]' classified: 'editing keys'TextImage understands: 'selectToNextPrompt | c2s	[c2s _ c2.	"select until next prompt so we replace the old result"	while (c2  para length and para(c2-2)  20) do [c2 _ c2 + 1].	"if no prompt found, undo"	para(c2-2)  20  [c2 _ c2s]]' classified: 'listener'TextImage derstands: 'isListening' unique.TextImage derstands: 'selectToPrompt' unique.