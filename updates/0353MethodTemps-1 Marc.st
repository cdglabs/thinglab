Class new title: FileNamePane	subclassof: VariablePane	fields: 'directory filter'	declare: '';	classified: 'Panes and Menus'FileNamePane understands: 'compile: paragr | fileName	[fileName _ self value.	user fileString: fileName _ paragr text]'FileNamePane understands: 'directory: dir filter: filt	[directory_ dir.	filter_ filt]'FileNamePane understands: 'selected 	[valuePane showing: (user fileString: self value)]'FileNamePane understands: 'value	[listselection]'FileNamePane understands: 'yellowbug | menu fileName file	[selection = 0  [window flash]	fileName _ listselection.	menu _ Menu new string: ''fileindeleteset directoryset filterpublish update''.	scrollBar hidewhile 		[menu bug = 1  [user filin: fileName];			= 2  [user confirm: ''Really delete ''+ fileName					[user fileString: fileName_ nil]];			= 3  [self setDirectory];			= 4  [self setFilter];			= 5  [file _ user fileString: fileName.				user fileString: (user update: fileName _ file) _ file.				user fileString: fileName _ nil]]	]'InspectWindow understands: 'of: obj	[ self of: obj varPane: VariablePane new]' classified: 'as yet unclassified'InspectWindow understands: 'of: obj varPane: vPane | varPane codePane v2 id s allStrings 	[object _ obj.	varPane _ vPane.  "May be a VarPane or FilePane"	codePane _ CodePane new.	self title: object class title with: varPane , codePane at: stdTemplates.	self newframe.	self show.	varPane to: codePane.	codePane from: varPane.	variables _ (Vector new: 16) asStream.	[object class is: VariableLengthClass  		[for id from: object fields do [self identifier: id]]	object Is: Dictionary 		[for id from: object objects do [id  nil  [] self identifier: id]]	object class fieldNamesInto: self].	v2 _ Vector new: 2.	v2 all_ object.	allStrings _ true.	for s from: variables contents do		[s Is: String  [] allStrings _ false].	object Is: Dictionary 		[varPane names: ((self ) concat: variables contents sort) values: v2 wrt: false]	varPane names: ((self ) concat: variables contents) values: v2 wrt: false]"Smalltalk inspect(1 2 9 2 6) inspectUndeclared invert inspect"'SystemDictionary understands: 'help  "Smalltalk help"	[user schedule: (CodeWindow new title: ''Useful expressions'' para: (SystemDictionary code: help)).	"	Smalltalk browseChanges. 	Changes init.	user browseFiles.	user sched inspect -> vector of windows	user schedule: ProjectSorter init.	Undeclared inspectWithTitle: ''Undeclared''.	Undeclared forgetUnreferencedEntries.  	Smalltalk inspectWithTitle: ''Smalltalk''.	Smalltalk allGlobals inspectWithTitle: ''Globals''.	Window browseAllSourceWIthString: ''exitflag''.	Smalltalk browseAllSourceWIthString: '' t1 ''.	Smalltalk browseSendersOf: unique.	Smalltalk browseImplementersOf: title:rocessFrame:.	user filoutWindowsOn: ''wintest.st''. 	Smalltalk _ SystemDictionary new copyfrom: Smalltalk.		Things to clean up. . .	Dorado, Notetaker, hardcopy, MethodKeeper, goBaby		beAlto, NTCursor, 	CompiledMethod holdLiterals has bitBlt to nil ?? but works	CompiledMethod numArgs:. crashes at BitBlt new bltObj:		when edited in browser, but can compileAll	MethodDict insert:method: etc		same but can compileAll	Decompiler/compile barfs onTextImage classInit		and UserView bugScreenMenu		and Window styleEdit		These all have many literals	Decompile/install gives scrollbar fibrillation		This is because the decompile of ListPaneeachtime		differs from its intended code  Try it: browse with 		shift key down (decompile) or not	"	]'UserView understands: 'browseFiles | dict window dir filter   "user browseFiles"	[dict _ (Dictionary new: 10) insertall: user fileStrings.	dir _ ''''.	filter _ ''*''.	window _ InspectWindow new		of: dict varPane: (FileNamePane new directory: ''zort'' filter: ''*'').	window title_ ''Files matching '' + filter.	user leaveTop; restartup: window]'UserView understands: 'bugScreenMenu | m w turtle i f index file	[m_ Stream new of: (1 to: 100).	screenMenu bug	= m next  [projectWindow runParent];	= m next  [user shiftKey  [projectSequencer visitPrevious] projectSequencer visitNext];	= m next  [self restore];	= m next  [self schedule: ProjectWindow init];	= m next  [Smalltalk help];	= m next  [self schedule: BrowseWindow default];	= m next  [self browseFiles];	= m next  [self schedule: (CodeWindow new title: ''Workspace'' para: '''')];	= m next  [w _ self loadFormWindow  [self schedule: w enter]];	= m next  [self schedule: ArrowWindow default];	= m next  [self schedule: RectWindow default];	= m next  [self schedule: EllipseWindow default];	= m next  [self schedule: StarWindow default];	= m next  [self schedule: D1TopWindow default];	= m next  [self turtleDemo];	= m next  [self loadUpdates];	= m next  [user save]]' classified: 'mouse, cursor and kbd'UserView understands: 'classInit  "UserView classInit."	[screenMenu _ Menu new string:''go to parent projectgo to next projectrestore displayopen a projecthelpopen a browseropen a file browseropen a workspaceopen form ...create an arrowcreate a rectanglecreate an ellipsecreate a startablet demoturtle demoload updatessave'']' classified: 'project state and content'UserView understands: 'request: s  "user request: ''What''''s the best language?'' "	[disp request: s]' classified: 'transcript etc'VariablePane understands: 'bugForDictionary | menu sself pair	"Dan: we should really have different pane classes for these cases. . ."	[sself _ values1.	[((self value is: String) and [self value has: ''''1]) 		["Case of method references"		menu _ Menu new string: ''inspectcopy nameremovebrowsesendersimplementers''].		menu _ Menu new string: ''inspectcopy nameremovebrowse''].	scrollBar hidewhile 		[menu bug = 1  [self value inspect];			= 2  [TextImage new primClipboard_ listselection];			= 3  [user confirm: ''remove '' + (listselection) + '' from this list?''  						[values1 delete: listselection]];			= 4  [Smalltalk browseMethodSpec: sself(listselection)];			= 5  [pair _ sself(listselection) splitAt: ''''1.					Smalltalk browseSendersOf: (pair2) unique];			= 6  [pair _ sself(listselection) splitAt: ''''1.					Smalltalk browseImplementersOf: (pair2) unique]]	]'VariablePane understands: 'bugForSymbolTable | menu cr sself pair	"Dan: we should really have different pane classes for these cases. . ."	[sself _ values1.	menu _ Menu new string: ''inspectcopy nameremoveshow references''.	scrollBar hidewhile 		[menu bug = 1  [self value inspect];			= 2  [TextImage new primClipboard_ listselection];			= 3  [user confirm: ''remove '' + (listselection) + '' from this list?''  						[sself delete: listselection]];			= 4  [sself browseAllRefsTo: listselection]]	]'VariablePane understands: 'isFileList	[ (values1) = FileList]'VariablePane understands: 'yellowbug | menu cr sself pair	[selection = 0  [window flash]	sself _ values1.	[sself is: Dictionary [self bugForDictionary]	sself is: SymbolTable [self bugForSymbolTable]].	scrollBar hidewhile 		[varmenu bug = 1  [self value inspect]]	]' classified: 'as yet unclassified'VariablePane derstands: 'bugForFileList' unique.UserView classInit