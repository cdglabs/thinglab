'New support in Dict inspectors, remove obsolete methods, reclaim UniqueStrings'UniqueString understands: 'rehash | t1 t2 t3  	[t1 _ USTable.	USTable _ Vector new: t1 length.	for t3 to: t1 length do		[USTable  t3 _ Vector new: 0.		for t2 from: t1  t3 do			[t2  nil  []			self intern: t2].		t1  t3 _ nil]]' classified: 'private'UserView understands: 'convertTime: s returnSecs: format | d dd t dfirst dlast m570 m571 [	"s is total seconds from midnight Jan 1 1901 GMT (Greenwich mean time).	see maxc <AltoDocs>AltoTime.Press for details"	"time zone specific parameters"	m570 _ mem0570. m571 _ mem0571.	"adjust for time zone"	s _ s + (([m570  0 ["west" 1] "east" 1]) * (		(3600 * ("hours" m570 bits: (1 to: 4))) +		(60 * ("additonal minutes" m571 bits: (1 to: 6))))).	t _ s intdiv: 86400.	"current day (in local standard time)"	d _ Date new fromDays: t1.	[format [] t _ Time new fromSeconds: t2].	"check for DST. correct DST parameters for nonleap years and	round to previous Sunday if necessary"	"day of the year on or before which DST takes effect"	dfirst _ m570 land: 0777 "bits: (7 to: 15)".	[[dfirst = 366 ["DST not in effect" false]	(dd _ d day)  (dfirst _ dfirst + d leap - 1) [		"day of the year on or before which DST ends"		dlast _ (m571 land: 0777 "bits: (7 to: 15)") + d leap - 1.		dd < dlast "if false, definitely after" and		dd < ((Date new day: dlast year: d year) previous: 6) day]	"possibly earlier than or at beginning of range"	dd  ((Date new day: dfirst year: d year) previous: 6) day] [		"daylight savings time in effect. add an hour"		format [s _ s + 3600]		t hours = 23 [			d _ d+1.			t hours: 0]		t hours: t hours+1]].	"return either total seconds or Date and Time"	format [s] d,t]' classified: 'Time stuff (to do)'UserView understands: 'NTshrink | t1 t2 was   "user NTshrink. "	[was _ UniqueString howMany.	user cr; show: ''Reclaiming UniqueStrings may take a while. . . ''.	WaitCursor showwhile 		[for t1 to: USTable length do			[for t2 to: (USTable  t1) length do				[(USTable  t1  t2) refct = 2  [USTable  t1  t2 _ nil]				]].		a rehash].	user show: (was - UniqueString howMany) asString + '' reclaimed.'']' classified: 'handy system access'UserView understands: 'reconfigure 	[] primitive: 53' classified: 'displaying'VariablePane understands: 'yellowbug | menu cr	[cr _ 13 inString.	selection = 0  [window flash]	[menu _ varmenu.		values1 is: Dictionary  [menu _ Menu new string: ''inspect''+cr+''remove'']		values1 is: SymbolTable  [menu _ Menu new string: ''inspect''+cr+''remove''+cr+''references'']		].	scrollBar hidewhile 		[menu bug = 1  [self value inspect];			= 2  [user confirm: ''really delete '' + (listselection) + ''?''  						[values1 delete: listselection]];			= 3  [user cr; show: listselection; cr; show: (values1 allRefsTo: listselection)]]	]' classified: 'as yet unclassified'UserView organization fromParagraph:'''Where Smalltalk holds most of the global static state, especially classes, UserView is a collection of state and methods relating to the dynamic operation of the system.  This includes input from the mouse and other devices, output to the transcript (disp), and the user view (get it?) that includes various windows and other display objects, their Z-ordering and ticking behavior.  There is also a changeSet that records and can filout changes made in that particular context, as a "poroject".  Most recently we have added the content dictionary that holds the displayable and scriptable content in this world in a way that allows it to be addressed with simple "project variables" now recognized by the compiler.  The intent is to provide a flexible set of instance variables for this world as a self-containted object.''(''transcript etc'' clear clearshow: confirm: cr croak ev frame newdisp newdisploc:and: next_ notify: print: request: show show: space tab )(''mouse, cursor and kbd'' anybug anykeys bluebug bugScreenMenu buttons ctrlKey currentCursor currentCursor: cursorBLTer:xoff:yoff: cursorLink: cursorloc_ draw eachtimeAgain kbck kbd kbd: kbdnext keyset metaKey mp mpnext nobug primCursorLoc_ primKbdBlock primKbdNext primKbdPeek primMouseKeys primMousePt rawkbck rawkbd read recognize recognizer recognizeStroke: redbug shiftKey waitbug waitclickbug waitnobug waitnokey x y yellowbug )(''start & finish'' install primSave quit quitThen: quitThen:continue: save uninstall )(''displaying'' currentDisplay: displayFlush displayHeight: displayoffwhile mapDisplay primScreenExtent reconfigure restore restore: restore:without: restoredisplay screenextent:tab: screenrect screenrect:vtab:htab:scale:color:projectWindow:disp:sched: )(''scheduling''  allWindowsAddTo: allWindowsInAllProjects leaveTop promote: requestRestart restart restart restartTicks restartup: run run: runTicks sched schedule: scheduleOnBottom: toBottom: topWindow unschedule: )(''project state and content'' asset: asset:_ assureContent classInit color color:scale: content copyIn: declare: loadFormWindow projectWindow rootUserview turtleDemo )(''handy system access'' classNames compileAllFrom:to: growSmalltalk: idle initCompiler millisecondsToRun notifier:level:interrupt: notifier:stack:interrupt: notifyNT: NTshrink primWait: purgealittle reportSpace ticks workspace )(''file stuff'' changedMessages changeLogdo editFile: fileMenu:directory:matching: fileString: fileString:_ fileStrings fileStrings: fileStrings:matching: filin: filout: filoutChanges:on: loadUpdates noChanges update: update:_ updatesAvailable writeChangedMessages: writeSources: )(''Time stuff (to do)'' convertTime:returnSecs: now rawtotalsecs time timewords today totalsecs version wait: waitUntil: )(''as yet unclassified'' )' asParagraph for: UserViewUserView derstands: 'calibrate' unique.UserView derstands: 'core' unique.UserView derstands: 'InLd:' unique.UserView derstands: 'overlay:' unique.UserView derstands: 'primEIANext' unique.UserView derstands: 'primEIANext_' unique.UserView derstands: 'primEIAPeek' unique.UserView derstands: 'primPort:' unique.UserView derstands: 'primPort:mask:_' unique.UserView derstands: 'releaseExternalViews' unique.UserView derstands: 'Swat' unique.UserView derstands: 'tablet' unique.UserView derstands: 'tabletabsolute' unique.UserView derstands: 'tabletbug' unique.UserView derstands: 'tabletrelative' unique.UserView derstands: 'touched' unique.UserView derstands: 'touchPrim:' unique.UserView derstands: 'touchPt' unique.UserView derstands: 'versionName' unique.user NTshrink.