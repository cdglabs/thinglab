'Changes from (8 April 2023 3:53:14 pm )'Class new title: FileNamePane	subclassof: VariablePane	fields: 'directory filter preview'	declare: '';	classified: 'Panes and Menus'Array understands: 'findString: str	[ self findString: str startingAt: 1]'Array understands: 'findString: str startingAt: start | i t	[str length=0[0] t_ str1.	for i from: start to: self length-str length+1 do		[selfi=t[self(i to: i+str length-1)=str[i]]]	0]'CodePane understands: 'close	[pared  nil  []	pared unselect. selectorPane _ pared _ nil. scrollBar close]' classified: 'as yet unclassified'CodePane understands: 'enter	[(self style: noTitle)		and ((frame has: pared frame origin)				and pared height  frame height)  []	scrollBar  nil  []	scrollBar show]' classified: 'menu messages'CodePane understands: 'leave	[scrollBar  nil  [ false]	scrollBar showing  [scrollBar hide]]' classified: 'as yet unclassified'CodePane understands: 'outline 	[pared  nil  []	self style: noBorder  [frame clear: white]	frame border: 1 color: (self style: borderColor)]' classified: 'indicating'CodePane understands: 'outside 	[scrollBar  nil  [ false]	scrollBar showing  [scrollBar startup]	false]' classified: 'as yet unclassified'CodePane understands: 'show	[pared  nil  []	frame outline. pared show]' classified: 'button commands'CodePane understands: 'showing: str 	[str  nil 		[pared _ scrollBar _ nil.  "suppresses clearing of frame"		frame clear: white]	pared _ TextImage new para: str asParagraph frame: nil.	pared formerly: false.	pared fixframe: frame.	self windowenter.	scrollBar _ ([scrollBar  nil  [ScrollBar new]			scrollBar]) on: frame from: pared]' classified: 'as yet unclassified'FileNamePane understands: 'deselected	[valuePane frame clear: white.	preview _ nil]'FileNamePane understands: 'selected | fileName valueString form box scale	[fileName _ directory + self value.	valueString _ user fileString: fileName.	[(fileName endsWith: ''.form'')		[form _ Form new fromInstance: valueString asStream]	(fileName endsWith: ''.pic'')		[form _ (BitRect new filin: fileName) asForm]	 valuePane showing: valueString].	[box _ valuePane frame.	form extent < box extent		[preview _ form]		"Shrink if necessary"		scale _ (form width asFloat / box width)			max: (form height asFloat / box height).		scale _ (scale+1 roundTo: 1) asInteger.		preview _ form scaledDown: scale].	valuePane showing: nil.	preview displayat: valuePane frame origin]'FileNamePane understands: 'show	[super show.	previewnilfalse		[preview displayat: valuePane frame origin]]'FileNamePane understands: 'yellowbug | menu fileName file	[[selection > 0[fileName _ listselection]].	menu _ Menu new string: ''fileindeleteupdateset directoryset filterpublish updateopen as a form''.	scrollBar hidewhile 		[menu bug = 1  [selection = 0  [window flash]					user filin: fileName];			= 2  [selection = 0  [window flash]					user confirm: ''Really delete ''+ fileName						[user fileString: fileName_ nil]];			= 3  [self update];			= 4  [self setDirectory];			= 5  [self setFilter];			= 6  [selection = 0  [window flash]				file _ user fileString: fileName.				user fileString: (user update: fileName _ file) _ file.				user fileString: fileName _ nil];			= 7  [selection = 0  [window flash]				user schedule: (user loadFormWindow: directory+fileName)]		]	]'String understands: 'beginsWith: str	[ (self findString: str) = 1]'String understands: 'endsWith: str	" ''Built for comfort, not for speed'' endsWith: ''speed'' "	[ (self reverse findString: str reverse) = 1]'String understands: 'findString: str	[ self findString: str startingAt: 1]'SymbolTable understands: 'browseFiles	"Smalltalk browseFiles"	[ self browseFiles: '''' matching: ''*'']'SymbolTable understands: 'browseFiles: directory matching: filterString  | dict window dir filter	"Smalltalk browseFiles: assetURL matching: ''*'' "	[dir _ directory.	filter _ filterString.	dict _ (Dictionary new: 10) insertall: (user fileStrings: dir matching: filter).	window _ InspectWindow new		of: dict varPane: (FileNamePane new directory: dir filter: filter).	window title_ dir + '' Files matching '' + filter.	user leaveTop; restartup: window]'SystemDictionary understands: 'help  "Smalltalk help."	[user schedule: (CodeWindow new title: ''Useful expressions'' para: (SystemDictionary code: help)).	"	Smalltalk browseChanges. 	Changes init.	user filout: ''BetterFileBrowser.st''	Smalltalk browseFiles.	Smalltalk browseFiles: assetURL matching: ''*''.      user schedule: Playground new init.	user filout: ''https://smalltalkzoo.thechm.org/users/adele/ChangesApr1.st''.	| f. f _ user fileMenu: ''file in'' directory: ''https://smalltalkzoo.thechm.org/users/adele'' 			  matching: ''*.st''  [user filin: f].	user sched inspect -> vector of windows	user findBuriedWindows.	user schedule: ProjectSorter init.	Undeclared inspectWithTitle: ''Undeclared''.	Undeclared forgetUnreferencedEntries.  	Smalltalk inspectWithTitle: ''Smalltalk''.	Smalltalk allGlobals inspectWithTitle: ''Globals''.	Window browseAllSourceWIthString: ''exitflag''.	Smalltalk browseAllSourceWIthString: '' t1 ''.	Smalltalk browseSendersOf: unique.	Smalltalk browseImplementersOf: title:rocessFrame:.	user filoutWindowsOn: ''wintest.st''. 		Things to clean up. . .	Dorado, Notetaker, hardcopy, MethodKeeper, goBaby		beAlto, NTCursor, 	CompiledMethod holdLiterals has bitBlt to nil ?? but works	CompiledMethod numArgs:. crashes at BitBlt new bltObj:		when edited in browser, but can compileAll	MethodDict insert:method: etc		same but can compileAll	Decompiler/compile barfs onTextImage classInit		and UserView bugScreenMenu		and Window styleEdit		These all have many literals	Decompile/install gives scrollbar fibrillation		This is because the decompile of ListPaneeachtime		differs from its intended code  Try it: browse with 		shift key down (decompile) or not	Get clipping working right for update of window titles		see Classpane>selected and UserView>restore:without:	"	]'UserView understands: 'loadFormWindow: f | index type slash form window	[type _ [f last = (''c''1)  [''pic''] ''form''].	form _ [type = ''pic''  [(BitRect new filin: f) asForm]		Form new fromInstance: (user fileString: f) asStream].	slash _ f reverse find: ''/''1.	[slash = 0  [slash _ f length + 1]].	window _ FormWindow new.	window title _ (f copy: f length - slash + 2 to: f length - type length - 1).	window initForm: form.	window]'Window understands: 'resize | hotspot mp myCorner delta	[hotspot _ self resizeHotspot.	until user anybug do [		user kbck  [ "pressed key, reframe by keyboard"			until user anybug do [				user kbdnext					= 193  [self resizeBy: 10];					= 194  [self resizeBy: 10];					= 195  [self resizeBy: 01];					= 196  [self resizeBy: 01];					 false  [self]].			user waitnobug].		(hotspot has: user mp)  false 			[false]].	self aboutToFrame.	myCorner _ frame corner.	until user nobug do [		(mp_ user mp)  myCorner  [			delta _ mp - myCorner.			self resizeBy: delta.			myCorner _ myCorner + delta.			user restore]].	user restore]' classified: 'framing'