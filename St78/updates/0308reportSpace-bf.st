'Add menu item to report used space'UserView understands: 'bugScreenMenu | m w turtle i f index file	[m _ 0.	screenMenu bug	= (m_m+1)  [projectWindow runParent];	= (m_m+1)  [user shiftKey  [projectSequencer visitPrevious] projectSequencer visitNext];	= (m_m+1)  [self restore];	= (m_m+1)  [self schedule: ProjectWindow init];	= (m_m+1)  [self schedule: ProjectSorter init];	= (m_m+1)  [self schedule: BrowseWindow default];	= (m_m+1)  [self schedule: (CodeWindow new class: UserView selector: workspace para: (UserView code: workspace) formerly: false)];	= (m_m+1)  [w _ self loadFormWindow  [self schedule: w enter]];	= (m_m+1)  [user schedule: ArrowWindow default];	= (m_m+1)  [user schedule: RectWindow default];	= (m_m+1)  [user schedule: EllipseWindow default];	= (m_m+1)  [user schedule: StarWindow default];	= (m_m+1)  [self schedule: D1TopWindow default];	= (m_m+1)  [self turtleDemo];	= (m_m+1) 		[f _ self fileMenu: ''edit'' directory: '''' matching: ''*''			 [self editFile: f]];	= (m_m+1) 		[f _ self fileMenu: ''file in'' directory: '''' matching: ''*.st''			 [self filin: f]];	= (m_m+1) 		[f _ self fileMenu: ''file delete'' directory: '''' matching: ''*''			 [self confirm: ''Really delete '' + f  [self fileString: f _ nil]]];		= (m_m+1) 		[f _ self fileMenu: ''publish'' directory: '''' matching: ''*.st''			 [file _ self fileString: f.			self fileString: (self update: f _ file) _ file.			self fileString: f _ nil]];	= (m_m+1)  [self loadUpdates];	= (m_m+1)  [self schedule: (CodeWindow new title: ''Space Report'' para: self reportSpace)];	= (m_m+1)  [user save]]' classified: 'as yet unclassified'UserView understands: 'classInit 	[screenMenu _ Menu new string:''go to parent projectgo to next projectrestore displayopen a projectopen a project sorteropen a browseropen a workspaceopen form ...create an arrowcreate a rectanglecreate an ellipsecreate a startablet demoturtle demoedit file ...file in ...delete file ...publish update ...load updatesreport spacesave'']' classified: 'as yet unclassified'UserView understands: 'reportSpace | counts name class c report	[XeqCursor showwhile [		counts _ (Vector new: 200) asStream.		for name from: (Class VariableLengthClass) do [			for class from: (Smalltalk  name) allInstances do [				c _ class howMany.			c > 0  [counts next_ c, class title]]].		report _ (String new: 500) asStream.		for c from: counts contents sort reverse do [			report print: c1; tab; print: c2; cr]].	report contents]' classified: 'as yet unclassified'UserView understands: 'turtleDemo | turtle i	[turtle _ Turtle init.	turtle color: black; width: 4; inking: oring.	for i to: 50 do [turtle go: i * 4; turn: 89]]' classified: 'menu messages'UserView classInit