'Changes from (20 March 2023 3:00:41 pm )Supports font editing with the BitRectEditor (see Font>edit:.  Also CodePane -search- tool with auto-select in the resulting code list 'Class new title: BitRectTool	subclassof: Object	fields: 'action mode penwidth gray grid brush brushpt pencil tone scale editor'	declare: 'graypens blowupScale ';	classified: 'Windows'Class new title: FileNamePane	subclassof: VariablePane	fields: 'directory filter'	declare: '';	classified: 'Panes and Menus'BitRectEditor understands: 'changeCharacterIndex: charix | charForm	["Only meaningful when fontUnderEdit is not nil"	(frame copy inset: 11 * (self style: borderWidth)) clear.	characterIndex _ charix.	charForm _ fontUnderEdit charForm: charix.	formUnderEdit _ charForm.	frame _ frame origin extent: charForm extent.	picture _ (BitRect new readFromForm: charForm).	picture origin: frame origin extent: frame extent.	self outline. 	picture show]'BitRectEditor understands: 'fontUnderEdit  | f  "outside access to the font being edited"	[ fontUnderEdit]'BitRectEditor understands: 'fontUnderEdit: font characterIndex: charix | charForm	[fontUnderEdit _ font.	characterIndex _ charix.	charForm _ fontUnderEdit charForm: charix.	formUnderEdit _ charForm.	self picture: (BitRect new readFromForm: charForm).	self frame: (Rectangle fromuser origin extent: charForm extent).	tool setAction: blowup.  "initialize to blowup"	self show.	]' classified: 'as yet unclassified'BitRectEditor understands: 'formUnderEdit: form	[formUnderEdit _ form.	"So we can tell its not a font editor. . ."	fontUnderEdit _ nil ]' classified: 'as yet unclassified'BitRectTool understands: 'blowup | smallRect bigRectFrame blowupAgain	[smallRect_[(editor frame extent * 10) < (user screenrect extent / 2) 		[user waitnobug. editor frame]		self getRectangle].		[smallRect area < 300 		[scale _ 10.]		scale _ 6. ].	bigRectFrame _ Rectangle new origin: smallRect corner		extent: (44) + (smallRect extent*scale).	smallRect empty or bigRectFrame area > 100000		[pencil frame flash.  nil].	[user screenrect has: bigRectFrame corner[] 		bigRectFrame moveto: smallRect origin-bigRectFrame extent.		user screenrect has: bigRectFrame origin[]		"can''t find a space for blown up image"			pencil frame flash.  nil].	blowupAgain _ true.	while blowupAgain do		[self blowup: smallRect to: bigRectFrame.		"Reopen blowup if user typed a new character to edit"		editor fontUnderEditnilfalse and: user kbck			[editor changeCharacterIndex: user kbd.			smallRect _ editor frame.			bigRectFrame _ Rectangle new origin: smallRect corner				extent: 44 + (smallRect  extent*scale)]		blowupAgain _ false]]' classified: 'as yet unclassified'BitRectTool understands: 'blowup: smallRect to: bigRectFrame		| bigRect box pt i turt flag bits	[bits _ bigRectFrame bitsIntoString.	bigRect _ bigRectFrame inset: 22.	smallRect blowup: bigRect origin by: scale.	turt_Turtle init.	box _ 00 rect: (scale-1)(scale-1).	"keep editing in blowup mode until the user presses a button		outside the big rect"	while flag do		[bigRect has: (pt _ user mp)			["Keep making dots until outside frame"			box moveto: bigRect origin + (i _ pt-bigRect origin|scale).			turt place: smallRect origin + (i/scale).			user redbug[box color: black mode: storing. 				turt color: black; go: 0]			user yellowbug[box color: white mode: storing. 				turt color: white; go: 0]			user bluebug[bigRect flash]			user kbck["Leave blowup; update editor; reenter blowup"				flag_false]]		user anybug 			[smallRect has: pt				[flag_false]	"jump back if click in small"			(bigRect inset: (0-scale) asPoint) has: pt				[bigRect flash]  "allow slightly outside"			flag_false]		].	bigRectFrame bitsFromString: bits.	editor writeToForm.	user waitnobug]' classified: 'as yet unclassified'BitRectTool understands: 'classComment [ ''A BitRectTool paints on the screen.A tool is a combination of action, mode, pen-width, gray, and grid.	action is one of: make-brush, paint, block-of-gray, draw, straight-edge, magnify.	mode is one of: store, or, xor, and.  (how tool is combined with picture)	pen-width is 1, 2, 4, or 8.  (width of the pen)	gray is one of: black, darkgray, gray, lightgray, white.	grid is one of: 1, 2, 4, 8, 16, 32.   (minimum spacing of mouse points)Menus for each part of a tool appear above the picture (in the same order).Some actions do not use certain of the other parts of a tool.(example: Block-of-gray does not use pen-width.)brushpt = Point in the menu where brush is shown.graypens = Vector of Strings of bits in pens.About the blowup or fatbits tool:When you click on the original form, you may choose a rectangle to be editedin fatbits mode.  If there isnt enough room on the screen, it will not blow upso choose a smaller rectangle.When editing the fatbits version, redbug makes black dots, yellowbug makes white.In the special case of editing a font, you can type a character in the fatbitsframe, and it will retarget the editor to that character in the font.'']' classified: 'accessing'BitRectTool understands: 'classInit | rect saveBits t i  "BitRectTool classInit."	["make a vector of gray pens"	rect _ 00 rect: 99.	saveBits_rect bitsIntoString.	t _ Turtle init.	graypens _ Vector new: 8.	for i to: 8 do		[t width: i.		rect clear: white. 		t place: 44; go: 0. 		graypensi _ BitRect new title: ''graypen'' in: rect.		(graypensi) saveScreenBits].	rect bitsFromString: saveBits]' classified: 'as yet unclassified'BitRectTool understands: 'getRectangle | rect newrect start t   "rect must be in my frame"	["the rect-newrect stuff is so that the complementing stays		on for a while"	start_self mpOnGrid.	rect_newrect_(Rectangle new origin: start corner: start)		intersect: self frame.	while user anybug do		[rect_newrect.		rect comp.		t_self mpOnGrid.		newrect_(Rectangle new origin: (start min: t) corner: (start max: t))			intersect: self frame.		user displayFlush.		rect comp].	rect]' classified: 'as yet unclassified'BitRectTool understands: 'setAction: a	[action _ a]'Class understands: 'allSubclasses | cls classes	"Array allSubclasses"	[classes _ Set default.	for cls from: Smalltalk allClasses		do [cls allSuperclasses has: self			[classes add: cls]].	 classes contents]'Class understands: 'allSuperclasses | cls classes	"FilePane allSuperclasses"	[cls _ superclass.  classes _ Set default.	while [cls  nil  false]		do [classes add: cls.			cls _ cls superclass].	 classes contents]'Class understands: 'browseAllSourceWIthString: aString | refs aClass supers class found each	"Integer browseAllSourceWIthString: ''max'' "	[refs _ Dictionary new init.  "Dictionary inspector is nicer"	for class from: (self withAllSuperclasses concat: self allSubclasses) do		[found _ class sourceStringReferencesTo: aString.		for each from: found do [refs insert: each with: each]		]	refs  inspectWithTitle: ''Methods with '' + aString asString]'Class understands: 'classified: categoryName	[SystemOrganization classify: title under: categoryName.	 self]'Class understands: 'withAllSubclasses 	"Array withAllSubclasses"	[ self inVector concat: self allSubclasses]'Class understands: 'withAllSuperclasses 	"FilePane withAllSuperclasses"	[ self inVector concat: self allSuperclasses]'ClassPane understands: 'classInit   "ClassPane classInit. "	[editmenu _ Menu new string: ''filoutprintforgetspawnreferencesvariablesclassvars'']' classified: 'as yet unclassified'ClassPane understands: 'yellowbug | bug cls varName	[selection = 0  [window flash]	bug _ editmenu bug. 	cls _ Smalltalk  (list  selection).	bug = 1  [cls filout]	bug = 2  [cls printout]	bug = 3  [systemPane forget: list  selection]	bug = 4  [user schedule: (BrowseWindow new browseClass: cls). user run: true]	bug = 5  [Smalltalk browseAllRefsTo: list  selection]	bug = 6  [varName _ (cls instvars + (''- - - - -'') + cls classvars contents) choose.			varNamefalsefalse[cls browseAllSourceWIthString: varName]]	bug = 7  [cls classvars inspectWithTitle: cls title + '' classvars'']	]' classified: 'as yet unclassified'CodePane understands: 'classInit   "CodePane classInit."	[editmenu _ Menu new string: ''again (j)copy (c)cut (x)paste (v)undo (z)doit (d)compile (s)cancelsearch (f)- - - - -insert pictureeffectlineheightalignment'']' classified: 'as yet unclassified'CodePane understands: 'help  "Smalltalk help."	[user schedule: (CodeWindow new title: ''Useful expressions'' para: (SystemDictionary code: help)).	"	Smalltalk browseChanges. 	Changes init.	user filout: ''DanChanges-Mar14.st''.	user browseFiles.	user sched inspect -> vector of windows	user findBuriedWindows.	user schedule: ProjectSorter init.	Undeclared inspectWithTitle: ''Undeclared''.	Undeclared forgetUnreferencedEntries.  	Smalltalk inspectWithTitle: ''Smalltalk''.	Smalltalk allGlobals inspectWithTitle: ''Globals''.	BitRectEditor classvars inspectWithTitle: ''classvars''.	BitRectEditor browseAllSourceWIthString: ''exitflag''.	Smalltalk browseAllSourceWIthString: ''ForBlow''.	Smalltalk browseSendersOf: fonts.	Smalltalk browseImplementersOf: title:rocessFrame:.	user filoutWindowsOn: ''wintest.st''. 	Smalltalk _ SystemDictionary new copyfrom: Smalltalk.		Things to clean up. . .	Dorado, Notetaker, hardcopy, MethodKeeper, goBaby		beAlto, NTCursor, 	CompiledMethod holdLiterals has bitBlt to nil ?? but works	CompiledMethod numArgs:. crashes at BitBlt new bltObj:		when edited in browser, but can compileAll	MethodDict insert:method: etc		same but can compileAll	Decompiler/compile barfs onTextImage classInit		and UserView bugScreenMenu		and Window styleEdit		These all have many literals	Decompile/install gives scrollbar fibrillation		This is because the decompile of ListPaneeachtime		differs from its intended code  Try it: browse with 		shift key down (decompile) or not	Get clipping working right for update of window titles		see Classpane>selected and UserView>restore:without:	"	]'CodePane understands: 'yellowbug	[editmenu bug		= 1  [pared again];		= 2  [pared copyselection];		= 3  [pared cut];		= 4  [pared paste];		= 5  [pared undo];		= 6  [self doit];		= 7  [self compile];		= 8  [self cancel];		= 9  [pared search];		"- - - - -"		= 11  [self insertPicture];		= 12  [self chooseEffect];		= 13  [self chooseLineHeight];		= 14  [self chooseAlignment]]' classified: 'as yet unclassified'FileNamePane understands: 'update | win	[win _ user topWindow.   "Where there''s a will there''s a way"	win inspectee init: 4; insertall: user fileStrings.	self revise: user fileStrings sort with: 0	]'FileNamePane understands: 'yellowbug | menu fileName file	[selection = 0  [window flash]	fileName _ listselection.	menu _ Menu new string: ''fileindeleteupdateset filterpublish update''.	scrollBar hidewhile 		[menu bug = 1  [user filin: fileName];			= 2  [user confirm: ''Really delete ''+ fileName					[user fileString: fileName_ nil]];			= 3  [self update];			= 4  [self setFilter];			= 5  [file _ user fileString: fileName.				user fileString: (user update: fileName _ file) _ file.				user fileString: fileName _ nil]]	]'Font understands: 'edit: char  | charix charForm ed index fontname  	"DefaultTextStyle fontset0 edit: ''A''. "	[charix _ [char is: String[char1] char].	user leaveTop.	index _DefaultTextStyle fontset fonts find: self.	fontname _ [index>0[DefaultTextStyle fontset namesindex]			''A Font''].	ed_BitRectEditor new fontUnderEdit: self characterIndex: charix.	ed title_ fontname.  ed showtitle.	user schedule: ed]' classified: 'character shapes'Font understands: 'widthof: c _ w | leftX rightX delta newRaster oldForm newForm i 	"DefaultTextStyle fontset0 widthof: ''A''1  = 9"	"DefaultTextStyle fontset0 widthof: ''A''1 _ 15  stretches ''A''"	[leftX _ xtable(c+1).	rightX _ xtable(c+2).	delta _ w - (rightX - leftX).	newRaster _ xtable last + delta + 15 / 16.	oldForm _ self glyphsForm.	raster _ xtable last + delta + 15 / 16.	glyphs _ String new: self byteraster * self height.	newForm _ self glyphsForm.	oldForm copy: (00 rect: rightXself height) to: 00 in: newForm.	oldForm copy: (rightX0 rect: xtable lastself height) to: rightX+delta0 in: newForm.	xtable _ xtable copy.	for i from: c+2 to: xtable length do [xtablei _ xtablei + delta].	maxwidth _ maxwidth max: w]' classified: 'as yet unclassified'FontSet understands: 'fonts [fonts]'InspectWindow understands: 'inspectee	[ object]'InspectWindow understands: 'of: obj varPane: vPane	[ self of: obj varPane: vPane askNewframe: true]'InspectWindow understands: 'of: obj varPane: vPane askNewframe: askNewframe | varPane codePane v2 id s allStrings 	[object _ obj.	varPane _ vPane.  "May be a VarPane or FilePane"	codePane _ CodePane new.	self title: object class title with: varPane , codePane at: stdTemplates.	[askNewframe[self newframe]		self frame: (user topWindow frame origin + (3030)					extent: 300200)].	self show.	varPane to: codePane.	codePane from: varPane.	variables _ (Vector new: 16) asStream.	[object class is: VariableLengthClass  		[for id from: object fields do [self identifier: id]]	object Is: Dictionary 		[for id from: object objects do [id  nil  [] self identifier: id]]	object class fieldNamesInto: self].	v2 _ Vector new: 2.	v2 all_ object.	allStrings _ true.	for s from: variables contents do		[s Is: String  [] allStrings _ false].	object Is: Dictionary 		[varPane names: ((self ) concat: variables contents sort) values: v2 wrt: false]	varPane names: ((self ) concat: variables contents) values: v2 wrt: false]' classified: 'as yet unclassified'RadioButtons understands: 'release: a thenPush: b | boxer offset	[a=b[]	offset _ [size=rect extent y[size0] 0size].	[a0[boxer _ Rectangle new origin: (offset*(a-1)+rect origin+1)				extent: sizesize-1.  boxer comp.  (boxer inset: 11) comp]].	b0[boxer _ Rectangle new origin: (offset*(b-1)+rect origin+1)				extent: sizesize-1.  boxer comp.  (boxer inset: 11) comp]]' classified: 'as yet unclassified'SymbolTable understands: 'allSourceWIthString: aString  | refs class found each classes i	["May take several seconds. . . "	refs _ Dictionary new init.  "Dictionary inspector is nicer"	classes _ Smalltalk allClasses.	user showProgressBar: ''Searching'' for class from: Smalltalk allClasses do 		[found _ class sourceStringReferencesTo: aString.		for each from: found			do [refs insert: each with: each]].	refs contents length<1[user confirm: ''None found''.  nil].	 refs]'SymbolTable understands: 'browseAllSourceWIthString: aString  | refs 	"Smalltalk browseAllSourceWIthString: ''while''. " 	"see also, eg. . .  UserView browseAllSourceWIthString: ''progress'' "	[refs _ self allSourceWIthString: aString.	refsnil[]	(user confirm: ''Browse '' + refs contents length asString + '' results'')		[refs inspectWithTitle: ''Methods with '' + aString asString].	]'SymbolTable understands: 'browseImmediateAllSourceWIthString: aString  | refs win	"Meant to be called from within a text editor, this makes and places	its results, ready to be viewed and searched again"	[refs _ self allSourceWIthString: aString.	refsnil[]	win _ InspectWindow new of: refs			varPane: VariablePane new askNewframe: false.	win title _ refs contents length asString			+ '' Methods with '' + aString asString.	user leaveTop; restartup: win]'SystemPane understands: 'compile: parag		| class cat className	[selection=2 [SystemOrganization fromParagraph: parag. self update] "new organization"	cat _ [selection1 [false] listselection].	class _ nilparag.	class Is: Class		[className _ class title unique.		mySysOrgVersionuser classNames			[selection>0				[classPane of: [cat [SystemOrganization category: cat] user classNames]]]		self update]]' classified: 'creating method dictionary'TextImage understands: 'classInit  "TextImage classInit."  "user kbd"	[bs _ 8.	ctlw _ 145.	esc _ 160.	cut _ 151.	copy _ 173.	paste _ 158.	doit _ 130. "doit key. doit char is 30"	prompt _ 167. "prompt key. prompt char is 20"	again _ 134.	all _ 136.	compile _ 138.	undo _ 153.	cancel _ 165.	left _ 193.	right _ 194.	up _ 195.	down _ 196.	pageup _ 197.	pagedown _ 198.	home _ 202.	end _ 203.	Deletion _ nullString.	Scrap _ Deletion.	on _ 1.	off _ 0.	paragraphmenu _ Menu new string: ''againcopycutpastedoitcompileundocancelalignfitresize'']' classified: 'as yet unclassified'TextImage understands: 'search 	[Smalltalk browseImmediateAllSourceWIthString: self selection]'UserView understands: 'browseFiles | dict window dir filter   "user browseFiles"	[dict _ (Dictionary new: 10) insertall: user fileStrings.	dir _ ''''.	filter _ ''*''.	window _ InspectWindow new		of: dict varPane: (FileNamePane new directory: ''zort'' filter: ''*'').	window title_ ''Files matching '' + filter.	user leaveTop; restartup: window]'UserView understands: 'bugScreenMenu | m w turtle i f index file	[m_ Stream new of: (1 to: 100).	screenMenu bug	= m next  [projectWindow runParent];	= m next  [user shiftKey  [projectSequencer visitPrevious] projectSequencer visitNext];	= m next  [self restore];	= m next  [Smalltalk help];	= m next  [self schedule: BrowseWindow default];	= m next  [self browseFiles];	= m next  [self schedule: (CodeWindow new title: ''Workspace'' para: '''')];	= m next  [self schedule: ProjectWindow init];	= m next  [w _ self loadFormWindow  [self schedule: w enter]];	= m next  [self chooseMakeShape];	= m next  [self schedule: D1TopWindow default];	= m next  [self turtleDemo];	= m next  [self loadUpdates];	= m next  [user save]]' classified: 'mouse, cursor and kbd'UserView understands: 'chooseMakeShape | menu m	[m_ Stream new of: (1 to: 10).	menu _ Menu new string: ''make an arrowmake a rectanglemake an ellipsemake a star''.	menu bugButtonUp	= m next  [self schedule: ArrowWindow default];	= m next  [self schedule: RectWindow default];	= m next  [self schedule: EllipseWindow default];	= m next  [self schedule: StarWindow default]	]'UserView understands: 'classInit  "UserView classInit."	[screenMenu _ Menu new string:''go to parent projectgo to next projectrestore displayhelpopen a code browseropen a file browseropen a workspaceopen a projectopen form ...make a shape ...tablet demoturtle demoload updatessave'']' classified: 'project state and content'UserView understands: 'filout: fName | outStrm "user filout: ''FontEditingEtc.st''."	[outStrm _ Stream default.	outStrm append: ''''''Changes from ''; print: user now; append: ''''''' + 30 inString + '''; cr.	self filoutChanges: Changes contents sort on: outStrm.	user fileString: fName _ outStrm contents]' classified: 'file stuff'UserView understands: 'save | log	[self currentDisplay: (Form new extent: 11 bits: ''--'' offset: nil).	self primSave.	self restoredisplay.	self restartTicks.	self changeLog log do		[log append: ''''''Image saved ''; print: user now; append: ''''''''].	self restore]' classified: 'start & finish'UserView understands: 'showProgressBar: caption for doVar from: source do doExpr | var barWin bar i frac	" | var [user showProgressBar: ''progress''		for var from: (1 to: 20) do [user wait: 100]]. "	"source must be an array"	[barWin _ FormWindow new form: (Form new extent: 12020).	barWin frame: (user mp - (barWin form extent/2) extent: barWin form extent).	barWin title _ caption copy.	user schedule: barWin.	barWin show.	for i from: 1 to: source length do		[doVar value_ sourcei.  doExpr eval.		bar _ barWin form.		bar white.		frac _ i asFloat/source length.  "0. . .1".		bar fill: (00 extent: (frac* bar extent x)  bar extent y) color: gray.		barWin show].	user unschedule: barWin.	user restore]'InspectWindow organization fromParagraph:'''This class has not yet been commented''(''comment'' )(''accessing'' )(''as yet unclassified'' classInit comment: contents identifier: of: of:varPane:askNewframe: separator: trailer: )(''As yet unclassified'' of:varPane: )' asParagraph for: InspectWindowBitRectEditor derstands: 'changeFontUnderEdit:characterIndex:' unique.BitRectEditor derstands: 'forntUnderEdit' unique.BitRectEditor derstands: 'kbd' unique.BitRectTool derstands: 'kbd' unique.UserView derstands: 'chooseShape' unique.UserView derstands: 'progressClose' unique.UserView derstands: 'progressOpen' unique.UserView derstands: 'progressUpdate:' unique.BitRectTool classInitClassPane classInitCodePane classInitTextImage classInitUserView classInit